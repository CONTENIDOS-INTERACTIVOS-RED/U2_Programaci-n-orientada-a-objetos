(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["tema3"],{"0526":function(e,a,t){e.exports=t.p+"img/img-62.5b7c8693.png"},"0966":function(e,a,t){"use strict";t("6833")},"0a52":function(e,a,t){e.exports=t.p+"img/img-54.2171c9a8.png"},"0c97":function(e,a,t){e.exports=t.p+"img/img-48.dc72972d.png"},2391:function(e,a,t){e.exports=t.p+"img/material-complementario.06dbfac1.svg"},"28d0":function(e,a,t){e.exports=t.p+"img/img-53.27d02677.svg"},"2cb4":function(e,a,t){e.exports=t.p+"img/img-52.3155b691.png"},"35ad":function(e,a,t){e.exports=t.p+"img/img-46.98b03d8b.svg"},"45e7":function(e,a,t){e.exports=t.p+"img/img-45.69dd4fd7.png"},5873:function(e,a,t){e.exports=t.p+"img/img-50.982004c9.png"},"5a93":function(e,a,t){"use strict";t.r(a);var s=function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"curso-main-container pb-3"},[s("BannerInterno",{attrs:{subTitulo:"3. Diseño basado en polimorfismo"}}),s("div",{staticClass:"container tarjeta tarjeta--blanca p-4 p-md-5 overflow-hidden"},[e._m(0),s("h2",[e._v("Interfaces y clases abstractas como contratos.")]),e._m(1),e._m(2),e._m(3),s("p",{staticClass:"mb-4"},[e._v('Cualquier clase que implemente la interfaz "Figura" debe proporcionar implementaciones para los métodos "calcularArea" y "calcularPerimetro". Esto permite tratar a todas las figuras de manera polimórfica, sin preocuparse por los detalles específicos de cada tipo de figura.')]),e._m(4),e._m(5),e._m(6),e._m(7),s("h2",[e._v("Sustitución de objetos en tiempo de ejecución.")]),e._m(8),e._m(9),e._m(10),s("p",{staticClass:"mb-4"},[e._v('Esta función puede trabajar con cualquier objeto que implemente la interfaz "Figura", sin importar su tipo real. En tiempo de ejecución, la lista podría contener instancias de "Circulo", "Rectangulo" u otras clases que implementen "Figura", y la función seguiría funcionando correctamente.')]),e._m(11),e._m(12),e._m(13),e._m(14),e._m(15),e._m(16),e._m(17),e._m(18),s("p",{staticClass:"mb-4"},[e._v('Si se crea una subclase "Cuadrado" que hereda de "Rectangulo", se podría violar el LSP si se redefine el método "establecerLados" para asegurar que ambos lados sean iguales:')]),e._m(19),e._m(20),e._m(21),e._m(22),s("p",{staticClass:"mb-4"},[e._v("A continuación, se presentan las principales ventajas que ofrece esta característica en el desarrollo de aplicaciones.")]),e._m(23),e._m(24),e._m(25),e._m(26),e._m(27),s("div",{staticClass:"row bg-azul-oscuro bg-full-width py-4 mb-4 border-top-verde-5"},[s("div",{staticClass:"px-5 pb-md-3 py-4 d-flex"},[e._m(28),s("div",{staticClass:"col-12 col-xl-8 d-flex ps-4 ps-xl-5 align-items-center flex-column"},[s("h2",{staticClass:"mb-4 pb-2 me-auto text-white"},[e._v("Ejemplos prácticos: colecciones polimórficas, controladores y síntesis de la unidad")]),s("p",{staticClass:"mb-5 text-white",attrs:{"data-aos":"fade-up"}},[e._v("Se invita a leer el documento Ejemplos prácticos: colecciones polimórficas, controladores y síntesis de la unidad, donde se aborda el uso del polimorfismo y la herencia en la programación orientada a objetos mediante aplicaciones prácticas como colecciones genéricas y controladores en el patrón MVC")]),s("a",{staticClass:"d-flex me-auto w-fit bg-white box-shadow cursor-pointer",attrs:{"data-aos":"fade-up",href:e.obtenerLink("/downloads/Anexos_Ejemplos_practicos.pdf"),target:"_blank"}},[s("img",{staticClass:"h-100",staticStyle:{width:"48px"},attrs:{src:t("643a"),alt:"Texto que describa la imagen"}}),e._m(29)])])])]),s("div",{staticClass:"bg-full-width border-top actividad",staticStyle:{"background-color":"#ebf1f5","border-top":"5px solid #f5c145 !important"}},[s("div",{staticClass:"p-4 p-md-5"},[s("div",{attrs:{id:"Actividad"}},[s("Actividad",{attrs:{cuestionario:e.cuestionario}})],1)])]),s("div",{staticClass:"bg-full-width border-top-9-azul"},[s("div",{staticClass:"px-5 pt-5 pb-0"},[s("h2",[e._v("Material complementario")]),s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-md-6 col-lg-8"},[s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("f021")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://elibro.net/es/ereader/tecnologicadeloriente/106519?page=1"}},[e._v("Programación orientada a objetos con C++")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("f021")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://elibro.net/es/ereader/tecnologicadeloriente/39461?page=1"}},[e._v("Programación orientada a objetos C++ y Java: un acercamiento interdisciplinario")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("f021")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://elibro.net/es/ereader/tecnologicadeloriente/106461?page=1"}},[e._v("Programación orientada a objetos")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("f021")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://elibro.net/es/ereader/tecnologicadeloriente/70431?page=1"}},[e._v("Lógica de programación orientada a objetos")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("f021")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://elibro.net/es/ereader/tecnologicadeloriente/34869?page=9"}},[e._v("Fundamentos de la programación orientada a objetos: una aplicación a las estructuras de datos en Java")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("f021")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://elibro.net/es/ereader/tecnologicadeloriente/63076?page=1"}},[e._v("Diseñar y programar, todo es empezar: una introducción a la Programación Orientada a Objetos usando UML y Java")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("5e35")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://youtu.be/ulFzH0KtIwc"}},[e._v("Polimorfismo con Clases Abstractas e Interfaces [Vídeo]")])]),s("p",{staticClass:"d-flex my-4"},[s("img",{staticClass:"me-3 mb-auto mt-1",style:{"max-width":"16px"},attrs:{src:t("5e35")}}),s("a",{staticClass:"text-small text-primary",attrs:{target:"_blank",href:"https://youtu.be/6eInyxthvdo"}},[e._v("Principio de Sustitución de Liskov - Por fin lo entenderás [SOLID] [Vídeo]")])])]),e._m(30)])])]),s("p")])],1)},i=[function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-4 d-none d-xl-block"},[s("img",{attrs:{src:t("45e7"),alt:"Texto que describa la imagen"}})]),s("div",{staticClass:"col-12 col-xl-8"},[s("p",{staticClass:"mb-4"},[e._v("El diseño basado en polimorfismo es un enfoque de diseño orientado a objetos que aprovecha la capacidad de las clases de implementar interfaces y de las subclases de sobrescribir métodos de las superclases. Este enfoque permite crear sistemas más flexibles, extensibles y mantenibles, al desacoplar las abstracciones de sus implementaciones concretas.")]),s("div",{staticClass:"d-flex bg-verde p-4 flex-column flex-md-row mb-4",attrs:{"data-aos":"fade-up"}},[s("img",{staticClass:"me-3",staticStyle:{width:"90px"},attrs:{src:t("35ad"),alt:"Texto descriptivo de la imagen"}}),s("div",{staticClass:"my-auto p-4 p-xl-0"},[s("p",{staticClass:"pe-xl-3 mb-0"},[e._v("En esta sección, se explorarán conceptos clave del diseño basado en polimorfismo, como el uso de interfaces y clases abstractas como contratos, la sustitución de objetos en tiempo de ejecución, la aplicación del principio de sustitución de Liskov y las ventajas del polimorfismo en el mantenimiento del software. También se presentarán ejemplos prácticos, como colecciones polimórficas y controladores.")])])])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-12 col-xl-8"},[s("p",{staticClass:"mb-4"},[e._v("Las interfaces y las clases abstractas son herramientas poderosas para definir contratos en el diseño orientado a objetos. Estos contratos especifican un conjunto de métodos que deben ser implementados por cualquier clase que quiera cumplir con el contrato, sin especificar cómo deben ser implementados (Vélez Serrano, 2011).")]),s("div",{staticClass:"bg-azul p-4 mb-4",attrs:{"data-aos":"fade-up"}},[s("span",[e._v("Las interfaces son completamente abstractas y solo contienen declaraciones de métodos, mientras que las clases abstractas pueden contener tanto métodos abstractos como implementaciones concretas. Las clases que implementan una interfaz o heredan de una clase abstracta están obligadas a proporcionar implementaciones para todos los métodos abstractos definidos en el contrato.")])]),s("span",[e._v('Por ejemplo, considere una interfaz "Figura" que define un contrato para objetos que representan figuras geométricas:')])]),s("div",{staticClass:"col-4 d-none d-xl-block"},[s("img",{attrs:{src:t("6d64"),alt:"Texto que describa la imagen"}})])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 15.")]),e._v("Interface figura")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4 mb-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-8 col-lg-5 col-xl-4 mx-auto"},[s("img",{attrs:{src:t("0c97"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 16.")]),e._v(" Ejemplo de polimorfismo.")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4 mb-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-8 col-lg-5 col-xl-4 mx-auto"},[s("img",{attrs:{src:t("d191"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"row bg-fondo-1 bg-full-width py-4 mb-4"},[t("div",{staticClass:"px-5 pb-md-3"},[t("p",{staticClass:"mb-4"},[e._v("Al utilizar interfaces o clases abstractas como contratos, se pueden crear diseños más flexibles y extensibles, ya que nuevos tipos de objetos pueden ser añadidos fácilmente sin afectar al resto del sistema, siempre y cuando cumplan con el contrato establecido.")])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mt-n4"},[s("div",{staticClass:"col-12 col-xl-8 mx-auto"},[s("div",{staticClass:"tarjeta shadow bg-white p-3 mb-5"},[s("div",{staticClass:"row justify-content-around align-items-center"},[s("div",{staticClass:"col-3 col-sm-2 px-4"},[s("img",{attrs:{src:t("9317")}})]),s("div",{staticClass:"col"},[s("div",{staticClass:"row justify-content-between align-items-center"},[s("div",{staticClass:"col mb-3 mb-sm-0"},[s("p",{staticClass:"text-bold mb-3"},[e._v("Polimorfismo con Clases Abstractas e Interfaces")]),s("p",{staticClass:"text-small"},[e._v("Para ampliar el concepto de polimorfismo con clases abstractas le invitamos a ver el siguiente vídeo.")])]),s("div",{staticClass:"col-sm-auto"},[s("a",{staticClass:"download-btn boton bg-morado-oscuro text-white",attrs:{href:"https://youtu.be/ulFzH0KtIwc",target:"_blank"}},[s("span",{staticClass:"text-small"},[e._v("Ver video")]),s("i",{staticClass:"fas fa-arrow-right"})])])])])])])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-12 col-xl-8"},[s("div",{staticClass:"bg-verde p-4 mb-4",attrs:{"data-aos":"fade-up"}},[s("span",[e._v("Una de las principales ventajas del polimorfismo es la capacidad de sustituir objetos en tiempo de ejecución. Esto significa que se puede escribir código que trabaje con referencias a clases base o interfaces, y en tiempo de ejecución, esas referencias pueden apuntar a instancias de cualquier clase derivada o que implemente la interfaz (Ceballos Sierra, 2018).")])]),s("span",[e._v('Esta sustitución permite escribir código más genérico y reutilizable, ya que no está acoplado a tipos específicos de objetos. Por ejemplo, considere una función que toma una lista de objetos "Figura" y calcula la suma de sus áreas:')])]),s("div",{staticClass:"col-4 d-none d-xl-block"},[s("img",{attrs:{src:t("5873"),alt:"Texto que describa la imagen"}})])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 17.")]),e._v("Ejemplo de código genérico. ")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4 mb-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-10 col-lg-7 col-xl-6 mx-auto"},[s("img",{attrs:{src:t("69b9"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 18.")]),e._v("Ejemplo de uso de interfaz sin importar el tipo real.")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4 mb-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-10 col-lg-7 col-xl-6 mx-auto"},[s("img",{attrs:{src:t("2cb4"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-flex bg-morado-oscuro bg-full-width p-4 flex-column flex-md-row mb-4",attrs:{"data-aos":"fade-up"}},[s("img",{staticClass:"me-3",staticStyle:{width:"90px"},attrs:{src:t("28d0"),alt:"Texto descriptivo de la imagen"}}),s("div",{staticClass:"my-auto p-4 p-xl-0"},[s("p",{staticClass:"px-4 mb-0 text-white"},[e._v('En este ejemplo, la función "calcularSumaAreas" se llama con una lista que contiene instancias de "Circulo" y "Rectangulo", pero trata a todos los objetos de manera polimórfica a través de la interfaz "Figura".')])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-fondo-1 bg-full-width py-4 mb-4"},[s("div",{staticClass:"px-5 pb-md-3"},[s("h2",[e._v("Aplicación del principio de sustitución de Liskov.")]),s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-12 col-xl-10"},[s("span",[e._v("El principio de sustitución de Liskov (LSP, por sus siglas en inglés) es un principio de diseño orientado a objetos que establece que los objetos de un programa deberían ser reemplazables por instancias de sus subtipos sin alterar la corrección del programa (López Goytia, 2015). En otras palabras, si un programa espera un objeto de tipo T, debería poder trabajar correctamente con cualquier objeto de un subtipo de T.")])]),s("div",{staticClass:"col-2 d-none d-xl-block"},[s("img",{attrs:{src:t("0a52"),alt:"Texto que describa la imagen"}})])])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mt-n4"},[s("div",{staticClass:"col-12 col-xl-8 mx-auto"},[s("div",{staticClass:"tarjeta shadow bg-white p-3 mb-5"},[s("div",{staticClass:"row justify-content-around align-items-center"},[s("div",{staticClass:"col-3 col-sm-2 px-4"},[s("img",{attrs:{src:t("9317")}})]),s("div",{staticClass:"col"},[s("div",{staticClass:"row justify-content-between align-items-center"},[s("div",{staticClass:"col mb-3 mb-sm-0"},[s("p",{staticClass:"text-bold mb-3"},[e._v("Principio de SUSTITUCIÓN de LISKOV ")]),s("p",{staticClass:"text-small"},[e._v("Para ampliar el concepto de sustitución de Liskov le invitamos a ver el siguiente vídeo.")])]),s("div",{staticClass:"col-sm-auto"},[s("a",{staticClass:"download-btn boton bg-morado-oscuro text-white",attrs:{href:"https://youtu.be/6eInyxthvdo",target:"_blank"}},[s("span",{staticClass:"text-small"},[e._v("Ver video")]),s("i",{staticClass:"fas fa-arrow-right"})])])])])])])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-12 col-xl-8"},[s("div",{staticClass:"bg-morado-oscuro p-4 mb-4",attrs:{"data-aos":"fade-up"}},[s("span",{staticClass:"text-white"},[e._v("Para cumplir con el LSP, las subclases deben adherirse a los contratos definidos por sus superclases. Esto significa que las subclases no deben fortalecer las precondiciones ni debilitar las postcondiciones de los métodos heredados. Además, las subclases no deben lanzar excepciones que no sean esperadas por los clientes de la superclase.")])]),s("span",[e._v('Por ejemplo, considere una clase "Rectangulo" con un método "establecerLados" que permite modificar la longitud de los lados:')])]),s("div",{staticClass:"col-4 d-none d-xl-block"},[s("img",{attrs:{src:t("7a77"),alt:"Texto que describa la imagen"}})])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 19.")]),e._v(" Ejemplo de método que permite modificar el atributo “longitud” de los lados. ")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4 mb-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-10 col-lg-7 col-xl-6 mx-auto"},[s("img",{attrs:{src:t("6f0e"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 20.")]),e._v(" Ejemplo de redefinición de método.")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4 mb-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-10 col-lg-7 col-xl-6 mx-auto"},[s("img",{attrs:{src:t("6ea6"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row mb-4"},[s("div",{staticClass:"col-4 d-none d-xl-block"},[s("img",{attrs:{src:t("eb40"),alt:"Texto que describa la imagen"}})]),s("div",{staticClass:"col-12 col-xl-8"},[s("div",{staticClass:"bg-amarillo p-4 mb-4",attrs:{"data-aos":"fade-up"}},[s("span",[e._v('En este caso, la subclase "Cuadrado" está fortaleciendo las precondiciones del método "establecerLados" al requerir que ambos lados sean iguales, lo que viola el LSP. Un cliente que espere trabajar con un "Rectangulo" genérico podría pasar valores diferentes para "lado1" y "lado2", lo que provocaría una excepción inesperada al trabajar con un "Cuadrado".')])]),s("span",[e._v("Para evitar este problema, se podrían utilizar interfaces o clases abstractas para definir contratos más específicos y evitar la herencia inapropiada.")])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("h2",[e._v("Ventajas del polimorfismo en el mantenimiento del "),t("i",[e._v("software")]),e._v(".")])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"row bg-fondo-3 bg-full-width py-4"},[t("div",{staticClass:"px-5 pb-md-3"},[t("figure",[t("div",{staticClass:"video"},[t("iframe",{attrs:{width:"1905",height:"732",src:"https://www.youtube.com/embed/Yd7vDterctQ",title:"3 A.M Coding Session - Chillstep Beats to Keep You Going",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:""}})])])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-flex bg-morado-oscuro bg-full-width p-4 flex-column flex-md-row mb-4",attrs:{"data-aos":"fade-up"}},[s("img",{staticClass:"me-3",staticStyle:{width:"90px"},attrs:{src:t("9860"),alt:"Texto descriptivo de la imagen"}}),s("div",{staticClass:"my-auto p-4 p-xl-0"},[s("p",{staticClass:"px-4 mb-0 text-white"},[e._v("Por ejemplo, considere un sistema de procesamiento de pagos que utiliza el polimorfismo para admitir diferentes métodos de pago:")])])])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"mb-4"},[t("b",[e._v("Figura 21.")]),e._v("Ejemplo de polimorfismo para admitir diferentes métodos de pago. ")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"row bg-azul py-4"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-10 col-lg-7 col-xl-6 mx-auto"},[s("img",{attrs:{src:t("9002"),alt:"Texto que describa la imagen"}})])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-flex bg-azul-oscuro bg-full-width p-4 flex-column flex-md-row",attrs:{"data-aos":"fade-up"}},[s("img",{staticClass:"me-3",staticStyle:{width:"90px"},attrs:{src:t("743c"),alt:"Texto descriptivo de la imagen"}}),s("div",{staticClass:"my-auto p-4 p-xl-0"},[s("p",{staticClass:"px-4 mb-0 text-white"},[e._v('Al utilizar la interfaz "MetodoPago", el sistema puede trabajar con cualquier método de pago de manera polimórfica. Si en el futuro se desea añadir un nuevo método de pago, como "TransferenciaBancaria", solo se necesitaría crear una nueva clase que implemente la interfaz "MetodoPago", sin necesidad de modificar el código existente que procesa los pagos. Además, se podrían escribir pruebas unitarias que verifiquen el comportamiento de la interfaz "MetodoPago", y esas pruebas seguirían siendo válidas para cualquier nueva implementación que se añada.')])])])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"d-none d-xl-block col-xl-4 mx-auto mt-4 mt-xl-0",attrs:{"data-aos":"zoom-in"}},[s("img",{staticClass:"h-100",attrs:{src:t("0526"),alt:"Texto que describa la imagen"}})])},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("p",{staticClass:"text-small fs-14px my-auto px-2"},[t("strong",[e._v("Anexo.")]),e._v(" Ejemplos prácticos: colecciones polimórficas, controladores y síntesis de la unidad")])},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("div",{staticClass:"col-12 col-md-6 col-lg-3"},[s("figure",[s("img",{attrs:{src:t("2391"),alt:"Imagen de material complementario"}})])])}],o=t("f31f"),r={name:"Tema3",components:{Actividad:o["default"]},data:function(){return{cuestionario:{tema:"Programación Orientada a Objetos",titulo:"Ponte a prueba",introduccion:"Demuestra lo que aprendiste en esta unidad y pon a prueba tus conocimientos.",barajarPreguntas:!0,preguntas:[{id:1,texto:"¿Qué permite una jerarquía de herencia en programación orientada a objetos?",barajarRespuestas:!0,opciones:[{id:"a",texto:"Crear una sola clase con muchos métodos sin reutilizarlos",esCorrecta:!1},{id:"b",texto:"Copiar y pegar código entre clases",esCorrecta:!1},{id:"c",texto:"Compartir atributos y métodos entre clases relacionadas",esCorrecta:!0},{id:"d",texto:"Usar solo funciones sin clases",esCorrecta:!1}],mensaje_correcto:"¡Muy bien! Ha acertado la respuesta.",mensaje_incorrecto:"Lo sentimos, su respuesta no es la correcta."},{id:2,texto:"En una jerarquía de herencia, la clase que hereda se llama:",barajarRespuestas:!0,opciones:[{id:"a",texto:"Clase general",esCorrecta:!1},{id:"b",texto:"Clase principal",esCorrecta:!1},{id:"c",texto:"Clase hija (o derivada)",esCorrecta:!0},{id:"d",texto:"Clase contenedora",esCorrecta:!1}],mensaje_correcto:"¡Muy bien! Ha acertado la respuesta.",mensaje_incorrecto:"Lo sentimos, su respuesta no es la correcta."},{id:3,texto:"¿Qué es la sobrescritura de métodos?",barajarRespuestas:!0,opciones:[{id:"a",texto:"Escribir dos funciones con el mismo nombre y distintos parámetros",esCorrecta:!1},{id:"b",texto:"Repetir el mismo método en varias clases",esCorrecta:!1},{id:"c",texto:"Modificar el comportamiento de un método heredado en una clase hija",esCorrecta:!0},{id:"d",texto:"Escribir funciones sin retorno",esCorrecta:!1}],mensaje_correcto:"¡Muy bien! Ha acertado la respuesta.",mensaje_incorrecto:"Lo sentimos, su respuesta no es la correcta."},{id:4,texto:"¿Qué ocurre en la sobrecarga de métodos?",barajarRespuestas:!0,opciones:[{id:"a",texto:"Se cambia el nombre de una función existente",esCorrecta:!1},{id:"b",texto:"Se elimina un método de una clase base",esCorrecta:!1},{id:"c",texto:"Se crean varios métodos con el mismo nombre pero distintos parámetros",esCorrecta:!0},{id:"d",texto:"Se copian métodos entre clases",esCorrecta:!1}],mensaje_correcto:"¡Muy bien! Ha acertado la respuesta.",mensaje_incorrecto:"Lo sentimos, su respuesta no es la correcta."},{id:5,texto:"¿Qué representa el polimorfismo en POO?",barajarRespuestas:!0,opciones:[{id:"a",texto:"Crear múltiples clases sin herencia",esCorrecta:!1},{id:"b",texto:"Usar un mismo método con comportamientos diferentes en distintas clases",esCorrecta:!0},{id:"c",texto:"Hacer que todas las clases tengan el mismo código",esCorrecta:!1},{id:"d",texto:"Repetir funciones para cada objeto",esCorrecta:!1}],mensaje_correcto:"¡Muy bien! Ha acertado la respuesta.",mensaje_incorrecto:"Lo sentimos, su respuesta no es la correcta."}],mensaje_final_aprobado:"¡Excelente! Ha superado la actividad.",mensaje_final_reprobado:"Le recomendamos volver a revisar el componente formativo e intentar nuevamente la actividad didáctica."}}},mounted:function(){var e=this;this.$nextTick((function(){e.$aosRefresh()}))}},c=r,l=(t("0966"),t("2877")),n=Object(l["a"])(c,s,i,!1,null,null,null);a["default"]=n.exports},"5e35":function(e,a,t){e.exports=t.p+"img/youtube-icon.0e5f1361.svg"},"643a":function(e,a,t){e.exports=t.p+"img/pdf-icon-square.6a47789e.svg"},6833:function(e,a,t){},"69b9":function(e,a,t){e.exports=t.p+"img/img-51.e8d7fda9.png"},"6d64":function(e,a,t){e.exports=t.p+"img/img-47.46003596.png"},"6ea6":function(e,a,t){e.exports=t.p+"img/img-57.d4b252c0.png"},"6f0e":function(e,a,t){e.exports=t.p+"img/img-56.9ebd3b9c.png"},"743c":function(e,a,t){e.exports=t.p+"img/img-61.d90780b4.svg"},"7a77":function(e,a,t){e.exports=t.p+"img/img-55.438f2369.png"},9002:function(e,a,t){e.exports=t.p+"img/img-60.044f4bd8.png"},9317:function(e,a,t){e.exports=t.p+"img/youtube-icon-circle.7bfbcd6c.svg"},9860:function(e,a,t){e.exports=t.p+"img/img-59.475351d5.svg"},d191:function(e,a,t){e.exports=t.p+"img/img-49.040028f7.png"},eb40:function(e,a,t){e.exports=t.p+"img/img-58.52cf6ca1.png"},f021:function(e,a,t){e.exports=t.p+"img/book.b08cb9da.svg"}}]);
//# sourceMappingURL=tema3.8d9dd261.js.map